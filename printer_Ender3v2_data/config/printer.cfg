[include mainsail.cfg]
[include mainsail.cfg]
# This file contains pin mappings for the Creality "v4.2.7" board. To
# use this config, during "make menuconfig" select the STM32F103 with
# a "28KiB bootloader" and serial (on USART1 PA10/PA9) communication.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.
[include fluidd.cfg]

[include print_area_bed_mesh.cfg]


[stepper_x]
step_pin: PB9
dir_pin: PC2
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA5
position_endstop: 0
position_max:249
homing_speed: 100

[stepper_y]
step_pin: PB7
dir_pin: !PB8
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA6
position_endstop: 0
position_max: 234
homing_speed: 100

[stepper_z]
step_pin: PB5
dir_pin: !PB6
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
#endstop_pin: ^PA7
endstop_pin: probe:z_virtual_endstop
position_min: -7
position_max: 230
homing_speed: 10

[extruder]
max_extrude_cross_section: 5
max_extrude_only_distance: 101
step_pin: PB3
dir_pin: !PB4
enable_pin: !PC3
microsteps: 16
rotation_distance: 22.260 #33.046#28.005#30.805
#SET_EXTRUDER_ROTATION_DISTANCE EXTRUDER=extruder DISTANCE=
pressure_advance = 0.6835
pressure_advance_smooth_time: 0.026
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 265

[verify_heater extruder]
max_error: 300
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error0
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
check_gain_time: 50
#   This controls heater verification during initial heating. Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
hysteresis: 5
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
heating_gain: 2
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.

[bltouch]
sensor_pin: ^PB1
control_pin: PB0
x_offset: -44.3
y_offset: -6.3
#z_offset: .210

[safe_z_home] 
home_xy_position: 158.5,117.5 # Change coordinates to the center of your print bed
z_hop: 20                 # Move up 10mm z_hop_speed: 5


[bed_mesh]
speed:150
horizontal_move_z: 8
mesh_min: 2.7, 1
mesh_max: 204.7, 227.7
probe_count: 5
fade_start: 0
mesh_pps: 2, 2
algorithm: bicubic
bicubic_tension: 0.2
move_check_distance: 5
split_delta_z: .025
fade_start: 1
fade_end: 10
fade_target: 0

[bed_screws]
screw1_name: front left screw
screw1: 49, 23.5
screw2_name: front right screw
screw2: 222.5, 23.5
screw3_name: rear right screw
screw3: 222.5, 199.5
screw4_name: rear left screw
screw4: 49, 199.5
screw5_name: center screw
screw5: 160.5,117.5



[screws_tilt_adjust]

screw1_name: front left screw
screw1: 72.50, 37.50
screw2_name: front right screw
screw2: 242.5, 37.5
screw3_name: rear right screw
screw3: 242.5, 199.5
screw4_name: rear left screw
screw4: 72.50, 199.5
horizontal_move_z: 10
speed: 150
screw_thread: CW-M4

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
control: pid
pid_Kp: 72.482
pid_Ki: 2.626
pid_Kd: 500.127
min_temp: 0
max_temp: 150

[fan]
pin: PA0

[mcu]
serial: /dev/serial/by-path/pci-0000:00:10.0-usb-0:2:1.0-port0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

[board_pins]
aliases:
    EXP1_1=PC6,EXP1_3=PB10,EXP1_5=PB14,EXP1_7=PB12,EXP1_9=<GND>,
    EXP1_2=PB2,EXP1_4=PB11,EXP1_6=PB13,EXP1_8=PB15,EXP1_10=<5V>,
    PROBE_IN=PB0,PROBE_OUT=PB1,FIL_RUNOUT=PC6
    
    # Enable object exclusion
[exclude_object]

# Enable arcs support
[gcode_arcs]
resolution: 0.1


#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.141250, -0.165000, -0.205000, -0.235000
#*# 	  -0.131250, -0.151250, -0.166250, -0.216250
#*# 	  -0.110000, -0.118750, -0.130000, -0.161250
#*# 	  -0.068750, -0.085000, -0.092500, -0.135000
#*# tension = 0.2
#*# min_x = 63.8
#*# algo = bicubic
#*# y_count = 4
#*# mesh_y_pps = 2
#*# min_y = 68.8
#*# x_count = 4
#*# max_y = 151.17
#*# mesh_x_pps = 2
#*# max_x = 156.17000000000002
#*#
#*# [bltouch]
#*# z_offset = 0.665
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 24.747
#*# pid_ki = 1.071
#*# pid_kd = 142.915
[virtual_sdcard]
path: /home/josh/Ender3v2_data/gcodes
 
# these are needed by mainsail macros
[gcode_macro _CLIENT_VARIABLE]
variable_speed_unretract : 35.0  ; unretract speed in mm/s
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
gcode:
    
    ######################################################################
    # Start Print and End Print
    ######################################################################
[pause_resume]

[gcode_macro M0]
gcode:
    PAUSE
    
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(230) %}      #edit to your park position
    {% set y = params.Y|default(230) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
    {% set z_safe = lift_z %}
    {% else %}
    {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{e} F2100
    {% else %}
    {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe}
    G90
    G1 X{x} Y{y} F6000
    {% else %}
    {action_respond_info("Printer not homed")}
    {% endif %}
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
    {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E{e} F2100
    {% else %}
    {action_respond_info("Extruder not hot enough")}
    {% endif %}
    RESUME_BASE {get_params}
    
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE
    
[gcode_macro START_PRINT]
variable_parameter_EXTRUDER_TEMP: 190
variable_parameter_BED_TEMP: 60
; gcode parameters for area bed mesh
variable_parameter_AREA_START : 0,0
variable_parameter_AREA_END : 0,0
gcode:
    # preheat, homing, etc
    BED_MESH_CALIBRATE AREA_START={params.AREA_START|default("0,0")} AREA_END={params.AREA_END|default("0,0")}
    # the rest of your start macro here
    
    _MATERIAL_PA  ;PA by slicer material
    _PURGE_LINE  ;Front Purge
    
    
[gcode_macro _PURGE_LINE]
gcode:
    {% if printer["gcode_macro status_cleaning"] != null %}
    status_cleaning
    {% endif %}
    SAVE_GCODE_STATE NAME=Pre_Prime
    
    G90
    G92 E0 ;Reset Extruder
    
    G1 Z10.0 F3000 ;Move Z Axis up
    G1 X0 Y0;
    G1 E10.0 F1800
    G1 Z0.28 F5000.0 ;Move to start position
    G1 X220 Y0 Z0.28 F1500.0 E30 ;Draw the first line
    G92 E0 ;Reset Extruder
    G1 Z10 F3000 ;Move Z Axis up
    RESTORE_GCODE_STATE NAME=Pre_Prime
    
    {% if printer["gcode_macro status_printing"] != null %}
    status_printing
    {% endif %}
    
[gcode_macro END_PRINT]
gcode:
    G4 ; Wait
    M220 S100 ; Reset Speed factor override percentage to default (100%)
    M221 S100 ; Reset Extrude factor override percentage to default (100%)
    G91 ; Set coordinates to relative
    G1 F1800 E-3 ; Retract filament 3 mm to prevent oozing
    G1 F3000 Z10 ; Move Z Axis up 10 mm to allow filament ooze freely
    #G91 ; Set coordinates to absolute
    G1 X0 Y0 F3000 ; Move Heat Bed to the front for easy print removal
    M104 S0 ; Turn off Extruder temperature
    M140 S0 ; Turn off Heat Bed
    M106 S0 ; Turn off Cooling Fan
    M107 ; Turn off Fan
    M84 ; Disable stepper motors
    
[gcode_macro MATERIAL_PA]
gcode:
    {% set MATERIAL = params.MATERIAL|default("XXX")|string %}
    {% set TEXT ="Setting PA for " + MATERIAL %}
    {% if MATERIAL == "PLA" %}
    SET_PRESSURE_ADVANCE ADVANCE=0.0525
    {% elif MATERIAL == "PET" %}
    SET_PRESSURE_ADVANCE ADVANCE=0.0650
    {% elif MATERIAL == "ABS" %}
    SET_PRESSURE_ADVANCE ADVANCE=0.0460
    {% else %}
    {% set TEXT ="No PA value for " + MATERIAL %}
    {% endif %}
    
[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_BASE
; gcode parameters
variable_parameter_AREA_START : 0,0
variable_parameter_AREA_END : 0,0
; the clearance between print area and probe area 
variable_mesh_area_offset : 5.0
; number of sample per probe point
variable_probe_samples : 2
; minimum probe count
variable_min_probe_count : 4
; scale up the probe count, should be 1.0 ~ < variable_max_probe_count/variable_min_probe_count
variable_probe_count_scale_factor : 1.0
; enable preference index
variable_enable_reference_index : False
gcode:
    {% if params.AREA_START and params.AREA_END %}
    {% set bedMeshConfig = printer["configfile"].config["bed_mesh"] %}
    {% set safe_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
    {% set safe_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
    {% set safe_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
    {% set safe_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}
    
    {% set area_min_x = params.AREA_START.split(",")[0]|float %}
    {% set area_min_y = params.AREA_START.split(",")[1]|float %}
    {% set area_max_x = params.AREA_END.split(",")[0]|float %}
    {% set area_max_y = params.AREA_END.split(",")[1]|float %}
    
    {% if bedMeshConfig.probe_count.split(",")|length == 2 %}
    {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
    {% set meshPointY = bedMeshConfig.probe_count.split(",")[1]|int %}
    {% else %}
    {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
    {% set meshPointY = bedMeshConfig.probe_count.split(",")[0]|int %}
    {% endif %}
    
    {% set meshMaxPointX = meshPointX %}
    {% set meshMaxPointY = meshPointY %}
    
    
    {% if (area_min_x < area_max_x) and (area_min_y < area_max_y) %}
    {% if area_min_x - mesh_area_offset >=  safe_min_x %}
    {% set area_min_x = area_min_x - mesh_area_offset %}
    {% else %}
    {% set area_min_x = safe_min_x %}
    {% endif %}
    
    {% if area_min_y - mesh_area_offset >=  safe_min_y %}
    {% set area_min_y = area_min_y - mesh_area_offset %}
    {% else %}
    {% set area_min_y = safe_min_y %}
    {% endif %}
    
    {% if area_max_x + mesh_area_offset <=  safe_max_x %}
    {% set area_max_x = area_max_x + mesh_area_offset %}
    {% else %}
    {% set area_max_x = safe_max_x %}
    {% endif %}
    
    {% if area_max_y + mesh_area_offset <=  safe_max_y %}
    {% set area_max_y = area_max_y + mesh_area_offset %}
    {% else %}
    {% set area_max_y = safe_max_y %}
    {% endif %}
    
    {% set meshPointX = (meshPointX * (area_max_x - area_min_x) / (safe_max_x - safe_min_x) * probe_count_scale_factor)|round(0)|int %}
    {% if meshPointX < min_probe_count %}
    {% set meshPointX = min_probe_count %}
    {% endif %}
    {% if meshPointX > meshMaxPointX %}
    {% set meshPointX = meshMaxPointX %}
    {% endif %}
    
    {% set meshPointY = (meshPointY * (area_max_y -area_min_y ) / (safe_max_y - safe_min_y) * probe_count_scale_factor )|round(0)|int %}
    {% if meshPointY < min_probe_count %}
    {% set meshPointY = min_probe_count %}
    {% endif %}
    {% if meshPointY > meshMaxPointY %}
    {% set meshPointY = meshMaxPointY %}
    {% endif %}
    
    {% set algorithm = "bicubic" %}
    {% if "algorithm" in bedMeshConfig %}
    {% set algorithm = bedMeshConfig.algorithm %}
    {% endif %}
    {% if meshPointX >=7 or meshPointY >=7 %}
    {% set algorithm = "bicubic" %}
    {% endif %}
    
    {% if enable_reference_index %}
    {% set referenceIndex = (meshPointX * meshPointY / 2 - 1 )|round(0)|int %}
    BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int} algorithm={algorithm} relative_reference_index={referenceIndex}
    {% else %}
    BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int} algorithm={algorithm}
    {% endif %}
    {% else %}
    BED_MESH_CALIBRATE_BASE
    {% endif %}
    {% else %}
    BED_MESH_CALIBRATE_BASE
    {% endif %}
    
    ######################################################################
    ## Filament Change                                                  ##
    ######################################################################
    # M600: Filament Change. This macro will pause the printer, move the
    # tool to the change position, and retract the filament 130mm. Adjust
    # the retraction settings for your own extruder. After filament has
    # been changed, the print can be resumed from its previous position
    # with the "SWAP_RESUME" gcode.
[gcode_macro M600]
########### Gcode ############
gcode:
    {% set X = params.X|default(printer.configfile.config["stepper_x"]["position_endstop"]|string)|int %}
    {% set Y = params.Y|default(printer.configfile.config["stepper_y"]["position_endstop"]|string)|int %}
    {% set Z = params.Z|default(10)|int %}
    {% set E = params.E|default(-20)|int %}
    {% set tool = params.tool|default(0)|int %}
    
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-5 F4000
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000        ;park position
    G0 E10 F500                ;extrude filament to get better blob on end
    G0 E{E} F600             ;retract additional filament to move out of melt zone
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=e{TOOL}_runout ENABLE=0
    
    #    Use this command resume during a mid print filament swap (DONT USE OCTO/MAINSAIL/DWC RESUME)
[gcode_macro SWAP_RESUME] 
gcode:
    RESTORE_GCODE_STATE NAME=M600_state
    SET_FILAMENT_SENSOR SENSOR=e0_runout ENABLE=1
    SET_FILAMENT_SENSOR SENSOR=e1_runout ENABLE=1
    resume
    
    # Enable object exclusion
