[include mainsail.cfg]
## Client klipper macro definitions
##
## Copyright (C) 2022 Alex Zellner <alexander.zellner@googlemail.com>
##
## This file may be distributed under the terms of the GNU GPLv3 license
##
## !!! This file is read-only. Maybe the used editor indicates that. !!!
##
## Customization:
##   1) copy the gcode_macro _CLIENT_VARIABLE (see below) to your printer.cfg
##   2) remove the comment mark (#) from all lines
##   3) change any value in there to your needs
##
## Use the PAUSE macro direct in your M600:
##  e.g. with a different park position front left and a minimal height of 50 
##    [gcode_macro M600]
##    description: Filament change
##    gcode: PAUSE X=10 Y=10 Z_MIN=50
##  Z_MIN will park the toolhead at a minimum of 50 mm above to bed to make it easier for you to swap filament.
##
## Client variable macro for your printer.cfg
#[gcode_macro _CLIENT_VARIABLE]
 # variable_use_custom_pos   : False ; #use custom park coordinates for x,y [True/False]
  #variable_custom_park_x    : 0.0   ; #custom x position; value must be within your defined min and max of X
  #variable_custom_park_y    : 0.0   ; #custom y position; value must be within your defined min and max of Y
  #variable_custom_park_dz   : 2.0   ; #custom dz value; the value in mm to lift the nozzle when move to park position
  #variable_retract          : 1.0   ; #the value to retract while PAUSE
  #variable_cancel_retract   : 5.0   ; #the value to retract while CANCEL_PRINT
  #variable_speed_retract    : 35.0  ; #retract speed in mm/s
  #variable_unretract        : 1.0   ; #the value to unretract while RESUME
  #variable_speed_unretract  : 35.0  ; #unretract speed in mm/s
  #variable_speed_hop        : 15.0  ; #z move speed in mm/s
  #variable_speed_move       : 100.0 ; #move speed in mm/s
  #variable_park_at_cancel   : False ; #allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
  #variable_park_at_cancel_x : None  ; #different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
  #variable_park_at_cancel_y : None  ; #different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
  #variable_use_fw_retract   : False ; #use fw_retraction instead of the manual version [True/False]
  #variable_idle_timeout     : 3600  ; #time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
  #variable_runout_sensor    : filament_switch_sensor e0_sensor; #If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
##                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
## !!! Custom macros, please use with care and review the section of the corresponding macro.
## These macros are for simple operations like setting a status LED. Please make sure your macro does not interfere with the basic macro functions.
## Only  single line commands are supported, please create a macro if you need more than one command.
#variable_user_pause_macro : ""    ; Everything insight the "" will be executed after the klipper base pause (PAUSE_BASE) function
#variable_user_resume_macro: ""    ; Everything insight the "" will be executed before the klipper base resume (RESUME_BASE) function
#variable_user_cancel_macro: ""    ; Everything insight the "" will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function
#gcode:

[include fluidd.cfg]
# This file contains pin mappings for the stock 2020 Creality Ender 6.
# To use this config, during "make menuconfig" select the
# STM32F103 with a "28KiB bootloader" and with "Use USB for
# communication" disabled.

# Because this printer has factory wiring, mounts, and firmware for
# a BLTouch, but does not ship with one at this time, default values
# for the sensor have been specified, but disabled, in anticipation of
# future revisions or user modification. User should take care to
# customize the offsets, particularly z-offset, for their specific unit.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select the
# USART3 serial port, which is broken out on the 10 pin IDC cable used
# for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PB8
dir_pin: PB7
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA5
position_endstop: 260
position_max: 260
homing_speed: 100

[stepper_y]
step_pin: PC2
dir_pin: !PB9
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA6
position_endstop: 260
position_max: 260
homing_speed: 100

[stepper_z]
step_pin: PB6
dir_pin: PB5
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
#position_endstop: 0.0                     # disable to use BLTouch
#endstop_pin: ^PA7                         # disable to use BLTouch
endstop_pin: probe:z_virtual_endstop    # enable to use BLTouch
position_min: -5                        # enable to use BLTouch
position_max: 400

[safe_z_home]                           # enable for BLTouch
home_xy_position: 154.7, 132.50
speed: 200
z_hop: 10
z_hop_speed: 20

[bltouch]                               # enable for BLTouch
sensor_pin:^PB1
control_pin:PB0
x_offset: -39
y_offset: 5
#z_offset: 2.4
speed: 10.0

[bed_mesh]                               # enable for BLTouch
speed: 200
horizontal_move_z: 5
mesh_min: 1, 20
mesh_max: 220, 260
probe_count: 5,5
mesh_pps: 2, 2
fade_start: 1
fade_end: 10
fade_target: 0
algorithm: bicubic
bicubic_tension: 0.2
move_check_distance: 5
split_delta_z: .025

[extruder]
max_extrude_only_distance: 1000.0
step_pin: PB4
dir_pin: !PB3
enable_pin: !PC3
microsteps: 16
rotation_distance: 3.4334 #5.64087 #5.184434 
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
#control: pid
#pid_Kp: 16.948
#pid_Ki: 0.706
#pid_Kd: 101.690
min_extrude_temp: 0
min_temp: 0
max_temp: 260
pressure_advance: 0.359

#[input_shaper]
#shaper_freq_x: 43.85
#shaper_freq_y: 68.72
#shaper_type: mzv

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
#control: pid
#pid_Kp: 61.638
#pid_Ki: 0.851
#pid_Kd: 1116.415
min_temp: -100
max_temp: 200

[fan]
pin: PA0

[filament_switch_sensor e0_sensor]
switch_pin: PA4

[mcu]
serial: /dev/serial/by-path/pci-0000:00:10.0-usb-0:3:1.0-port0
restart_method: command

[printer]
kinematics: corexy
max_velocity: 500
max_accel: 4000
max_accel_to_decel: 4000
max_z_velocity: 20
max_z_accel: 100
square_corner_velocity: 5.0

[display]
lcd_type: st7920
cs_pin: EXP1_7
sclk_pin: EXP1_6
sid_pin: EXP1_8
encoder_pins: ^EXP1_5, ^EXP1_3
click_pin: ^!EXP1_2

[board_pins]
aliases:
  EXP1_1=PC6,EXP1_3=PB10,EXP1_5=PB14,EXP1_7=PB12,EXP1_9=<GND>,
  EXP1_2=PB2,EXP1_4=PB11,EXP1_6=PB13,EXP1_8=PB15,EXP1_10=<5V>,
  PROBE_IN=PB0,PROBE_OUT=PB1,FIL_RUNOUT=PC6

#====================================================================
# MANUAL BED LEVELING
#====================================================================
[bed_screws]
screw1: 43,33
screw1_name: front left screw
screw2: 43,223
screw2_name: rear left screw
screw3: 233,223
screw3_name: rear right screw
screw4: 233,33
screw4_name: front right screw

#====================================================================
# SREW ADJUSTMENT
#====================================================================
[screws_tilt_adjust]
screw1: 76, 52.5
screw1_name: front left screw
screw2: 76, 237
screw2_name: rear left screw
screw3: 260, 237
screw3_name: rear right screw
screw4: 260, 52.5
screw4_name: front right screw
horizontal_move_z: 5
speed: 150
screw_thread: CW-M4

# Enable object exclusion
[exclude_object]

# Enable arcs support
[gcode_arcs]
resolution: 0.1

[virtual_sdcard]
path: ~/Ender6_data/gcodes

[display_status]

#=====================================================================
# MACROS                                                            ||
#=====================================================================


#############################
# Start Print and End Print #
#############################

# Replace the slicer's custom start and end g-code scripts with
# START_PRINT and END_PRINT.

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(220)|float %}
    # Start bed heating
    M140 S{BED_TEMP}
    # Use absolute coordinates
    G90
    # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z=0.0
    # Home the printer
    G28
    # Move the nozzle near the bed
     BED_MESH_CALIBRATE AREA_START={params.AREA_START|default("0,0")} AREA_END={params.AREA_END|default("0,0")}
    # Move the nozzle very close to the bed
    G1 Z0.15 F300
    # Wait for bed to reach temperature
    M190 S{BED_TEMP}
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}

[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    #G91
   
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G91
    G1 X-2 Y-2 E-3 F300
    # Disable steppers
    M84

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

#############################
# Pause and Resume          #
#############################

[gcode_macro M0]
gcode:
    PAUSE

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
  {% set E = params.E|default(1.7)|float %}
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 E-{E} F2100
  G1 Z{z_safe} F900
  G90
  G0 X{x_park} Y{y_park} F6000
  G91

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  {% set E = params.E|default(1)|float %} # edit to your preferred retract length
  G91
  G1 E{E} F2100
  G90
  RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
  BASE_RESUME

#############################
# Filament Change           #
#############################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state
	
[gcode_macro UNLOAD]
gcode:
	G91
        G1 E5.0 F1200
        G1 E3.0 F1600
        G1 E-13.14 F7000
	G1 E-540 F3000
	G90
        
[gcode_macro PAUSE_MACRO]
gcode:
    PAUSE
	PARK_MACRO
	
[gcode_macro PURGE]
gcode:
        M117 PURGING..
        G91
        G1 E45.0 F250
        G90
        
[gcode_macro LOAD_FILAMENT]
gcode:
        M117  LOADING...
        G91
        G1 E25.0 F1000
        G1 E435 F2500
        G4 P900
        G1 E45.0 F250
        G90

[gcode_macro RESUME_MACRO]
gcode:
        M117  RESUMING...
        RESUME

#############################
# Idle Timeout              #
#############################

[idle_timeout]
gcode:
  {% if printer.pause_resume.is_paused %}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=True
    {action_respond_info("Idle Timeout: Extruder powered down")}
    M104 S0   ; Set Hot-end to 0C (off)
  {% else %}
    {action_respond_info("Idle Timeout: Stepper and Heater powered down")}
    TURN_OFF_HEATERS
    M84
  {% endif %}
  
#############################
# Bed Mesh Calibration      #
#############################

[gcode_macro G29]
gcode:
    BED_MESH_CALIBRATE
    
[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_BASE
; gcode parameters
variable_parameter_AREA_START : 0,0
variable_parameter_AREA_END : 0,0
; the clearance between print area and probe area 
variable_mesh_area_offset : 5.0
; number of sample per probe point
variable_probe_samples : 2
; minimum probe count
variable_min_probe_count : 4
; scale up the probe count, should be 1.0 ~ < variable_max_probe_count/variable_min_probe_count
variable_probe_count_scale_factor : 1.0
; enable preference index
variable_enable_reference_index : False
gcode:
    {% if params.AREA_START and params.AREA_END %}
        {% set bedMeshConfig = printer["configfile"].config["bed_mesh"] %}
        {% set safe_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
        {% set safe_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
        {% set safe_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
        {% set safe_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}

        {% set area_min_x = params.AREA_START.split(",")[0]|float %}
	{% set area_min_y = params.AREA_START.split(",")[1]|float %}
	{% set area_max_x = params.AREA_END.split(",")[0]|float %}
	{% set area_max_y = params.AREA_END.split(",")[1]|float %}

	{% if bedMeshConfig.probe_count.split(",")|length == 2 %}
            {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
            {% set meshPointY = bedMeshConfig.probe_count.split(",")[1]|int %}
        {% else %}
            {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
            {% set meshPointY = bedMeshConfig.probe_count.split(",")[0]|int %}
        {% endif %}

	{% set meshMaxPointX = meshPointX %}
	{% set meshMaxPointY = meshPointY %}


        {% if (area_min_x < area_max_x) and (area_min_y < area_max_y) %}
            {% if area_min_x - mesh_area_offset >=  safe_min_x %}
                {% set area_min_x = area_min_x - mesh_area_offset %}
            {% else %}
                {% set area_min_x = safe_min_x %}
            {% endif %}

            {% if area_min_y - mesh_area_offset >=  safe_min_y %}
                {% set area_min_y = area_min_y - mesh_area_offset %}
            {% else %}
                {% set area_min_y = safe_min_y %}
            {% endif %}

            {% if area_max_x + mesh_area_offset <=  safe_max_x %}
                {% set area_max_x = area_max_x + mesh_area_offset %}
            {% else %}
                {% set area_max_x = safe_max_x %}
            {% endif %}

            {% if area_max_y + mesh_area_offset <=  safe_max_y %}
                {% set area_max_y = area_max_y + mesh_area_offset %}
            {% else %}
                {% set area_max_y = safe_max_y %}
            {% endif %}

            {% set meshPointX = (meshPointX * (area_max_x - area_min_x) / (safe_max_x - safe_min_x) * probe_count_scale_factor)|round(0)|int %}
            {% if meshPointX < min_probe_count %}
                {% set meshPointX = min_probe_count %}
            {% endif %}
	    {% if meshPointX > meshMaxPointX %}
                {% set meshPointX = meshMaxPointX %}
            {% endif %}

            {% set meshPointY = (meshPointY * (area_max_y -area_min_y ) / (safe_max_y - safe_min_y) * probe_count_scale_factor )|round(0)|int %}
            {% if meshPointY < min_probe_count %}
                {% set meshPointY = min_probe_count %}
            {% endif %}
	    {% if meshPointY > meshMaxPointY %}
                {% set meshPointY = meshMaxPointY %}
            {% endif %}

            {% set algorithm = "bicubic" %}
	    {% if "algorithm" in bedMeshConfig %}
	        {% set algorithm = bedMeshConfig.algorithm %}
            {% endif %}
            {% if meshPointX >=7 or meshPointY >=7 %}
                {% set algorithm = "bicubic" %}
            {% endif %}

            {% if enable_reference_index %}
                {% set referenceIndex = (meshPointX * meshPointY / 2 - 1 )|round(0)|int %}
                BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int} algorithm={algorithm} relative_reference_index={referenceIndex}
            {% else %}
                BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int} algorithm={algorithm}
            {% endif %}
        {% else %}
            BED_MESH_CALIBRATE_BASE
        {% endif %}
    {% else %}
        BED_MESH_CALIBRATE_BASE
    {% endif %}

# Enable object exclusion
[exclude_object]

# Enable arcs support
[gcode_arcs]
resolution: 0.1

[menu __main]
type: list
name: Main

[menu __main __tune]
type: list
enable: {printer.idle_timeout.state == "Printing"}
name: Tune
index: 1

[menu __main __calibrate]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Calibrate
index: 2

[menu __main __octoprint]
type: list
name: OctoPrint
enable: true

[menu __main __sdcard]
type: vsdlist
enable: true
name: SD Card

[menu __main __calibrate __calibration_home_all_axes]
type: command
name: Home XYZ
gcode: G28

[menu __main __calibrate __calibration_probe_calibrate]
type: list
name: Probe Calibrate

[menu __main __calibrate __calibration_probe_calibrate __calibrate]
type: command
name: Probe Calib.
gcode:
  {% set ns = namespace(NEED2HOME = false) %}
  {% for AXIS in ["x", "y", "z"] %}
    {% if AXIS not in printer.toolhead.homed_axes %}
      {% set ns.NEED2HOME = true %}
    {% endif %}
  {% endfor %}
  {% if ns.NEED2HOME == true %}
    G28
  {% endif %}
  PROBE_CALIBRATE

[menu __main __calibrate __calibration_probe_calibrate __adjust_Z+1]
type: command
name: Z+1: {'%05.1f' % printer.gcode_move.position.z}
gcode: TESTZ Z=+1

[menu __main __calibrate __calibration_probe_calibrate __adjust_Z-1]
type: command
name: Z-1: {'%05.1f' % printer.gcode_move.position.z}
gcode: TESTZ Z=-1

[menu __main __calibrate __calibration_probe_calibrate __adjust_Z+.1]
type: command
name: Z+.1: {'%05.1f' % printer.gcode_move.position.z}
gcode: TESTZ Z=+.1

[menu __main __calibrate __calibration_probe_calibrate __adjust_Z-.1]
type: command
name: Z-.1: {'%05.1f' % printer.gcode_move.position.z}
gcode: TESTZ Z=-.1

[menu __main __calibrate __calibration_probe_calibrate __adjust_Zpp]
type: command
name: Z+: {'%05.1f' % printer.gcode_move.position.z}
gcode: TESTZ Z=+

[menu __main __calibrate __calibration_probe_calibrate __adjust_Zmm]
type: command
name: Z-: {'%05.1f' % printer.gcode_move.position.z}
gcode: TESTZ Z=-

[menu __main __calibrate __calibration_probe_calibrate __calibration_accept]
type: command
name: Accept Adj.
gcode:
  ACCEPT
  SAVE_CONFIG
  {(menu.back.True)}

[menu __main __calibrate __calibration_probe_calibrate __calibration_abort]
type: command
name: Abort
gcode:
  ABORT
  {(menu.back.True)}

[menu __main __calibrate __manual_bed_screw_calibrate]
type: list
name: Man. Bed Screw Calib.

[menu __main __calibrate __manual_bed_screw_calibrate __bed_screws_adjust]
type: command
name: Adjust Bed Screws
gcode: BED_SCREWS_ADJUST

[menu __main __calibrate __manual_bed_screw_calibrate __accept]
type: command
name: Accept
gcode: ACCEPT

[menu __main __calibrate __manual_bed_screw_calibrate __adjusted]
type: command
name: Adjusted
gcode:
  ADJUSTED
  {(menu.back.True)}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 17.019
#*# pid_ki = 0.411
#*# pid_kd = 176.150
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 71.365
#*# pid_ki = 1.006
#*# pid_kd = 1265.838
#*#
#*# [stepper_z]
#*# position_endstop = 0.110
#*#
#*# [bltouch]
#*# z_offset = 3.275
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.001250, -0.023750, -0.056250, -0.066250
#*# 	  0.061250, 0.008750, -0.016250, -0.050000
#*# 	  0.043750, -0.000000, -0.037500, -0.081250
#*# 	  0.021250, -0.018750, -0.046250, -0.092500
#*# tension = 0.2
#*# min_x = 94.88
#*# algo = bicubic
#*# y_count = 4
#*# mesh_y_pps = 2
#*# min_y = 107.85
#*# x_count = 4
#*# max_y = 152.13
#*# mesh_x_pps = 2
#*# max_x = 165.09
